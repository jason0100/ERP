// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(ErpDbContext))]
    [Migration("20200513080843_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Expenditure.ExpenditureModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("amount_paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("amount_payable")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("due_date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("item_id")
                        .HasColumnType("int");

                    b.Property<int?>("partner_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("payment_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("project_id")
                        .HasColumnType("int");

                    b.Property<byte?>("status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("partner_id");

                    b.HasIndex("project_id");

                    b.ToTable("expenditure");
                });

            modelBuilder.Entity("API.Models.Partner.PartnerModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("contact_number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contact_person")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("created")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("landline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("organization_id")
                        .HasColumnType("int");

                    b.Property<string>("representative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("status")
                        .HasColumnType("tinyint");

                    b.Property<int?>("tax_ID_number")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("partner");
                });

            modelBuilder.Entity("API.Models.Project.ProjectModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("date_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("date_start")
                        .HasColumnType("datetime2");

                    b.Property<int?>("internal_HR")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("outsourcing_HR")
                        .HasColumnType("int");

                    b.Property<string>("remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("project");
                });

            modelBuilder.Entity("API.Models.Project.project_partnerModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created")
                        .HasColumnType("datetime2");

                    b.Property<int>("partner_id")
                        .HasColumnType("int");

                    b.Property<int>("project_id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("updated")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("partner_id");

                    b.HasIndex("project_id");

                    b.ToTable("project_partner");
                });

            modelBuilder.Entity("API.Models.applepen.apple", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("apple");
                });

            modelBuilder.Entity("API.Models.applepen.applePenModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("appleId")
                        .HasColumnType("int");

                    b.Property<int>("name")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("appleId");

                    b.ToTable("applePens");
                });

            modelBuilder.Entity("API.Models.Expenditure.ExpenditureModel", b =>
                {
                    b.HasOne("API.Models.Partner.PartnerModel", "partner")
                        .WithMany()
                        .HasForeignKey("partner_id");

                    b.HasOne("API.Models.Project.ProjectModel", "project")
                        .WithMany()
                        .HasForeignKey("project_id");
                });

            modelBuilder.Entity("API.Models.Project.project_partnerModel", b =>
                {
                    b.HasOne("API.Models.Partner.PartnerModel", "partner_")
                        .WithMany()
                        .HasForeignKey("partner_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Project.ProjectModel", "project_")
                        .WithMany()
                        .HasForeignKey("project_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("API.Models.applepen.applePenModel", b =>
                {
                    b.HasOne("API.Models.applepen.apple", "apple")
                        .WithMany()
                        .HasForeignKey("appleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
